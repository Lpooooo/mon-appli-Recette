{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luchi\\\\Documents\\\\DevProject\\\\mon-appli\\\\src\\\\components\\\\Action.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport MenuItem from '@mui/material/MenuItem';\nimport MenuList from '@mui/material/MenuList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Créer votre recette', 'Squash and merge', 'Rebase and merge'];\nexport default function SplitButton() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      variant: \"contained\",\n      ref: anchorRef,\n      \"aria-label\": \"Button group with a nested menu\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        children: options[selectedIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        \"aria-controls\": open ? 'split-button-menu' : undefined,\n        \"aria-expanded\": open ? 'true' : undefined,\n        \"aria-label\": \"select merge strategy\",\n        \"aria-haspopup\": \"menu\",\n        onClick: handleToggle,\n        children: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      sx: {\n        zIndex: 1\n      },\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      children: ({\n        TransitionProps,\n        placement\n      }) => /*#__PURE__*/_jsxDEV(Grow, {\n        ...TransitionProps,\n        style: {\n          transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MenuList, {\n              id: \"split-button-menu\",\n              autoFocusItem: true,\n              children: options.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                disabled: index === 2,\n                selected: index === selectedIndex,\n                onClick: event => handleMenuItemClick(event, index),\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(SplitButton, \"iOJX1GbrjEJXdM49lHfo+/a1EuI=\");\n_c = SplitButton;\nvar _c;\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"names":["React","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","jsxDEV","_jsxDEV","options","SplitButton","_s","open","setOpen","useState","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","Fragment","children","variant","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","undefined","sx","zIndex","anchorEl","role","transition","disablePortal","TransitionProps","placement","style","transformOrigin","onClickAway","id","autoFocusItem","map","option","disabled","selected","_c","$RefreshReg$"],"sources":["C:/Users/luchi/Documents/DevProject/mon-appli/src/components/Action.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Grow from '@mui/material/Grow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Popper from '@mui/material/Popper';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport MenuList from '@mui/material/MenuList';\r\n\r\nconst options = ['Créer votre recette', 'Squash and merge', 'Rebase and merge'];\r\n\r\nexport default function SplitButton() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleClick = () => {\r\n    console.info(`You clicked ${options[selectedIndex]}`);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        ref={anchorRef}\r\n        aria-label=\"Button group with a nested menu\"\r\n      >\r\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\r\n        <Button\r\n          size=\"small\"\r\n          aria-controls={open ? 'split-button-menu' : undefined}\r\n          aria-expanded={open ? 'true' : undefined}\r\n          aria-label=\"select merge strategy\"\r\n          aria-haspopup=\"menu\"\r\n          onClick={handleToggle}\r\n        >\r\n          <ArrowDropDownIcon />\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Popper\r\n        sx={{ zIndex: 1 }}\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === 'bottom' ? 'center top' : 'center bottom',\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList id=\"split-button-menu\" autoFocusItem>\r\n                  {options.map((option, index) => (\r\n                    <MenuItem\r\n                      key={option}\r\n                      disabled={index === 2}\r\n                      selected={index === selectedIndex}\r\n                      onClick={(event) => handleMenuItemClick(event, index)}\r\n                    >\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </React.Fragment>\r\n  );\r\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,OAAO,GAAG,CAAC,qBAAqB,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;AAE/E,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMC,SAAS,GAAGlB,KAAK,CAACmB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,KAAK,CAACiB,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,IAAI,CAAC,eAAeZ,OAAO,CAACQ,aAAa,CAAC,EAAE,CAAC;EACvD,CAAC;EAED,MAAMK,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC5CN,gBAAgB,CAACM,KAAK,CAAC;IACvBX,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBZ,OAAO,CAAEa,QAAQ,IAAK,CAACA,QAAQ,CAAC;EAClC,CAAC;EAED,MAAMC,WAAW,GAAIJ,KAAK,IAAK;IAC7B,IAAIR,SAAS,CAACa,OAAO,IAAIb,SAAS,CAACa,OAAO,CAACC,QAAQ,CAACN,KAAK,CAACO,MAAM,CAAC,EAAE;MACjE;IACF;IAEAjB,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA,CAACX,KAAK,CAACkC,QAAQ;IAAAC,QAAA,gBACbxB,OAAA,CAACT,WAAW;MACVkC,OAAO,EAAC,WAAW;MACnBC,GAAG,EAAEnB,SAAU;MACf,cAAW,iCAAiC;MAAAiB,QAAA,gBAE5CxB,OAAA,CAACV,MAAM;QAACqC,OAAO,EAAEhB,WAAY;QAAAa,QAAA,EAAEvB,OAAO,CAACQ,aAAa;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC/D/B,OAAA,CAACV,MAAM;QACL0C,IAAI,EAAC,OAAO;QACZ,iBAAe5B,IAAI,GAAG,mBAAmB,GAAG6B,SAAU;QACtD,iBAAe7B,IAAI,GAAG,MAAM,GAAG6B,SAAU;QACzC,cAAW,uBAAuB;QAClC,iBAAc,MAAM;QACpBN,OAAO,EAAEV,YAAa;QAAAO,QAAA,eAEtBxB,OAAA,CAACR,iBAAiB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACd/B,OAAA,CAACJ,MAAM;MACLsC,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAE,CAAE;MAClB/B,IAAI,EAAEA,IAAK;MACXgC,QAAQ,EAAE7B,SAAS,CAACa,OAAQ;MAC5BiB,IAAI,EAAEJ,SAAU;MAChBK,UAAU;MACVC,aAAa;MAAAf,QAAA,EAEZA,CAAC;QAAEgB,eAAe;QAAEC;MAAU,CAAC,kBAC9BzC,OAAA,CAACN,IAAI;QAAA,GACC8C,eAAe;QACnBE,KAAK,EAAE;UACLC,eAAe,EACbF,SAAS,KAAK,QAAQ,GAAG,YAAY,GAAG;QAC5C,CAAE;QAAAjB,QAAA,eAEFxB,OAAA,CAACL,KAAK;UAAA6B,QAAA,eACJxB,OAAA,CAACP,iBAAiB;YAACmD,WAAW,EAAEzB,WAAY;YAAAK,QAAA,eAC1CxB,OAAA,CAACF,QAAQ;cAAC+C,EAAE,EAAC,mBAAmB;cAACC,aAAa;cAAAtB,QAAA,EAC3CvB,OAAO,CAAC8C,GAAG,CAAC,CAACC,MAAM,EAAEhC,KAAK,kBACzBhB,OAAA,CAACH,QAAQ;gBAEPoD,QAAQ,EAAEjC,KAAK,KAAK,CAAE;gBACtBkC,QAAQ,EAAElC,KAAK,KAAKP,aAAc;gBAClCkB,OAAO,EAAGZ,KAAK,IAAKD,mBAAmB,CAACC,KAAK,EAAEC,KAAK,CAAE;gBAAAQ,QAAA,EAErDwB;cAAM,GALFA,MAAM;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAMH,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAErB;AAAC5B,EAAA,CAlFuBD,WAAW;AAAAiD,EAAA,GAAXjD,WAAW;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}