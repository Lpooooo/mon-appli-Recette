{"ast":null,"code":"'use client';\n\nvar _Typography;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Checkbox from '@mui/material/Checkbox';\nimport Container from '@mui/material/Container';\nimport Divider from '@mui/material/Divider';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\nimport AppleIcon from '@mui/icons-material/Apple';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport GoogleIcon from \"./icons/Google.js\";\nimport FacebookIcon from \"./icons/Facebook.js\";\nimport TwitterIcon from \"./icons/Twitter.js\";\nimport InstagramIcon from \"./icons/Instagram.js\";\nimport TikTokIcon from \"./icons/TikTok.js\";\nimport LinkedInIcon from \"./icons/LinkedIn.js\";\nimport SlackIcon from \"./icons/Slack.js\";\nimport SpotifyIcon from \"./icons/Spotify.js\";\nimport TwitchIcon from \"./icons/Twitch.js\";\nimport DiscordIcon from \"./icons/Discord.js\";\nimport LineIcon from \"./icons/Line.js\";\nimport Auth0Icon from \"./icons/Auth0.js\";\nimport MicrosoftEntraIdIcon from \"./icons/MicrosoftEntra.js\";\nimport CognitoIcon from \"./icons/Cognito.js\";\nimport GitLabIcon from \"./icons/GitLab.js\";\nimport KeycloakIcon from \"./icons/Keycloak.js\";\nimport OktaIcon from \"./icons/Okta.js\";\nimport FusionAuthIcon from \"./icons/FusionAuth.js\";\nimport { BrandingContext, RouterContext } from \"../shared/context.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst mergeSlotSx = (defaultSx, slotProps) => {\n  if (Array.isArray(slotProps?.sx)) {\n    return [defaultSx, ...slotProps.sx];\n  }\n  if (slotProps?.sx) {\n    return [defaultSx, slotProps?.sx];\n  }\n  return [defaultSx];\n};\nconst getCommonTextFieldProps = function (theme) {\n  let baseProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    required: true,\n    fullWidth: true,\n    ...baseProps,\n    slotProps: {\n      ...baseProps.slotProps,\n      htmlInput: {\n        ...baseProps.slotProps?.htmlInput,\n        sx: mergeSlotSx({\n          paddingTop: theme.spacing(1),\n          paddingBottom: theme.spacing(1)\n        }, typeof baseProps.slotProps?.htmlInput === 'function' ? {} : baseProps.slotProps?.htmlInput)\n      },\n      inputLabel: {\n        ...baseProps.slotProps?.inputLabel,\n        sx: mergeSlotSx({\n          lineHeight: theme.typography.pxToRem(12),\n          fontSize: theme.typography.pxToRem(14)\n        }, typeof baseProps.slotProps?.inputLabel === 'function' ? {} : baseProps.slotProps?.inputLabel)\n      }\n    }\n  };\n};\nconst IconProviderMap = new Map([['github', /*#__PURE__*/_jsx(GitHubIcon, {}, \"github\")], ['credentials', /*#__PURE__*/_jsx(PasswordIcon, {}, \"credentials\")], ['google', /*#__PURE__*/_jsx(GoogleIcon, {}, \"google\")], ['facebook', /*#__PURE__*/_jsx(FacebookIcon, {}, \"facebook\")], ['passkey', /*#__PURE__*/_jsx(FingerprintIcon, {}, \"passkey\")], ['twitter', /*#__PURE__*/_jsx(TwitterIcon, {}, \"twitter\")], ['apple', /*#__PURE__*/_jsx(AppleIcon, {}, \"apple\")], ['instagram', /*#__PURE__*/_jsx(InstagramIcon, {}, \"instagram\")], ['tiktok', /*#__PURE__*/_jsx(TikTokIcon, {}, \"tiktok\")], ['linkedin', /*#__PURE__*/_jsx(LinkedInIcon, {}, \"linkedin\")], ['slack', /*#__PURE__*/_jsx(SlackIcon, {}, \"slack\")], ['spotify', /*#__PURE__*/_jsx(SpotifyIcon, {}, \"spotify\")], ['twitch', /*#__PURE__*/_jsx(TwitchIcon, {}, \"twitch\")], ['discord', /*#__PURE__*/_jsx(DiscordIcon, {}, \"discord\")], ['line', /*#__PURE__*/_jsx(LineIcon, {}, \"line\")], ['auth0', /*#__PURE__*/_jsx(Auth0Icon, {}, \"auth0\")], ['microsoft-entra-id', /*#__PURE__*/_jsx(MicrosoftEntraIdIcon, {}, \"microsoft-entra-id\")], ['cognito', /*#__PURE__*/_jsx(CognitoIcon, {}, \"cognito\")], ['gitlab', /*#__PURE__*/_jsx(GitLabIcon, {}, \"gitlab\")], ['keycloak', /*#__PURE__*/_jsx(KeycloakIcon, {}, \"keycloak\")], ['okta', /*#__PURE__*/_jsx(OktaIcon, {}, \"okta\")], ['fusionauth', /*#__PURE__*/_jsx(FusionAuthIcon, {}, \"fusionauth\")]]);\n/**\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n *\n * API:\n *\n * - [SignInPage API](https://mui.com/toolpad/core/api/sign-in-page)\n */\nfunction SignInPage(props) {\n  const {\n    providers,\n    signIn,\n    slots,\n    slotProps,\n    sx\n  } = props;\n  const theme = useTheme();\n  const branding = React.useContext(BrandingContext);\n  const router = React.useContext(RouterContext);\n  const passkeyProvider = providers?.find(provider => provider.id === 'passkey');\n  const credentialsProvider = providers?.find(provider => provider.id === 'credentials');\n  const emailProvider = providers?.find(provider => provider.id === 'nodemailer');\n  const [{\n    loading,\n    selectedProviderId,\n    error,\n    success\n  }, setFormStatus] = React.useState({\n    selectedProviderId: undefined,\n    loading: false,\n    error: '',\n    success: ''\n  });\n  const callbackUrl = router?.searchParams.get('callbackUrl') ?? '/';\n  const singleProvider = React.useMemo(() => providers?.length === 1, [providers]);\n  const isOauthProvider = React.useCallback(provider => provider && provider !== 'credentials' && provider !== 'nodemailer' && provider !== 'passkey', []);\n  return /*#__PURE__*/_jsx(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      ...sx\n    },\n    children: /*#__PURE__*/_jsx(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxs(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          bgcolor: 'background.paper',\n          borderRadius: 1,\n          p: 4,\n          border: '1px solid',\n          borderColor: alpha(theme.palette.grey[400], 0.4),\n          boxShadow: theme.shadows[4]\n        },\n        children: [branding?.logo, slots?.title ? /*#__PURE__*/_jsx(slots.title, {}) : /*#__PURE__*/_jsxs(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          sx: {\n            my: theme.spacing(1),\n            textAlign: 'center',\n            fontWeight: 600\n          },\n          children: [\"Sign in \", branding?.title ? `to ${branding.title}` : null]\n        }), slots?.subtitle ? /*#__PURE__*/_jsx(slots.subtitle, {}) : _Typography || (_Typography = /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          textAlign: \"center\",\n          children: \"Welcome, please sign in to continue\"\n        })), /*#__PURE__*/_jsxs(Box, {\n          sx: {\n            mt: theme.spacing(1),\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxs(Stack, {\n            spacing: 1,\n            children: [error && isOauthProvider(selectedProviderId) ? /*#__PURE__*/_jsx(Alert, {\n              severity: \"error\",\n              children: error\n            }) : null, Object.values(providers ?? {}).filter(provider => isOauthProvider(provider.id)).map(provider => {\n              return /*#__PURE__*/_jsx(\"form\", {\n                onSubmit: async event => {\n                  event.preventDefault();\n                  setFormStatus({\n                    error: '',\n                    selectedProviderId: provider.id,\n                    loading: true\n                  });\n                  const oauthResponse = await signIn?.(provider, undefined, callbackUrl);\n                  setFormStatus(prev => ({\n                    ...prev,\n                    loading: oauthResponse?.error ? false : prev.loading,\n                    error: oauthResponse?.error\n                  }));\n                },\n                children: /*#__PURE__*/_jsx(LoadingButton, {\n                  variant: \"outlined\",\n                  type: \"submit\",\n                  fullWidth: true,\n                  size: \"large\",\n                  disableElevation: true,\n                  name: \"provider\",\n                  color: \"inherit\",\n                  loading: loading && selectedProviderId === provider.id,\n                  value: provider.id,\n                  startIcon: IconProviderMap.get(provider.id),\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  children: /*#__PURE__*/_jsxs(\"span\", {\n                    children: [\"Sign in with \", provider.name]\n                  })\n                }, provider.id)\n              }, provider.id);\n            })]\n          }), passkeyProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'passkey' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: passkeyProvider.id,\n                  loading: true\n                });\n                event.preventDefault();\n                const formData = new FormData(event.currentTarget);\n                const passkeyResponse = await signIn?.(passkeyProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: passkeyResponse?.error\n                }));\n              },\n              children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                ...slotProps?.emailField\n              }) : /*#__PURE__*/_jsx(TextField, {\n                ...getCommonTextFieldProps(theme, {\n                  label: 'Email',\n                  placeholder: 'your@email.com',\n                  id: 'email-passkey',\n                  name: 'email',\n                  type: 'email',\n                  autoComplete: 'email-webauthn',\n                  autoFocus: singleProvider,\n                  ...slotProps?.emailField\n                })\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsxs(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"outlined\",\n                disableElevation: true,\n                startIcon: IconProviderMap.get(passkeyProvider.id),\n                color: \"inherit\",\n                loading: loading && selectedProviderId === passkeyProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: [\"Sign in with \", passkeyProvider.name || 'Passkey']\n              })]\n            })]\n          }) : null, emailProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'nodemailer' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, success && selectedProviderId === 'nodemailer' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"success\",\n              children: success\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                event.preventDefault();\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: emailProvider.id,\n                  loading: true\n                });\n                const formData = new FormData(event.currentTarget);\n                const emailResponse = await signIn?.(emailProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: emailResponse?.error,\n                  success: emailResponse?.success\n                }));\n              },\n              children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                ...slotProps?.emailField\n              }) : /*#__PURE__*/_jsx(TextField, {\n                ...getCommonTextFieldProps(theme, {\n                  label: 'Email',\n                  placeholder: 'your@email.com',\n                  name: 'email',\n                  id: 'email-nodemailer',\n                  type: 'email',\n                  autoComplete: 'email-nodemailer',\n                  autoFocus: singleProvider,\n                  ...slotProps?.emailField\n                })\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsx(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"outlined\",\n                disableElevation: true,\n                id: \"submit-nodemailer\",\n                color: \"inherit\",\n                loading: loading && selectedProviderId === emailProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: \"Sign in with Email\"\n              })]\n            })]\n          }) : null, credentialsProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'credentials' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: credentialsProvider.id,\n                  loading: true\n                });\n                event.preventDefault();\n                const formData = new FormData(event.currentTarget);\n                const credentialsResponse = await signIn?.(credentialsProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: credentialsResponse?.error\n                }));\n              },\n              children: [/*#__PURE__*/_jsxs(Stack, {\n                direction: \"column\",\n                spacing: 2,\n                sx: {\n                  mb: 2\n                },\n                children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                  ...slotProps?.emailField\n                }) : /*#__PURE__*/_jsx(TextField, {\n                  ...getCommonTextFieldProps(theme, {\n                    label: 'Email',\n                    placeholder: 'your@email.com',\n                    id: 'email',\n                    name: 'email',\n                    type: 'email',\n                    autoComplete: 'email',\n                    autoFocus: singleProvider,\n                    ...slotProps?.emailField\n                  })\n                }), slots?.passwordField ? /*#__PURE__*/_jsx(slots.passwordField, {\n                  ...slotProps?.passwordField\n                }) : /*#__PURE__*/_jsx(TextField, {\n                  ...getCommonTextFieldProps(theme, {\n                    name: 'password',\n                    type: 'password',\n                    label: 'Password',\n                    id: 'password',\n                    placeholder: '*****',\n                    autoComplete: 'current-password',\n                    ...slotProps?.passwordField\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Stack, {\n                direction: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                spacing: 1,\n                sx: {\n                  justifyContent: 'space-between'\n                },\n                children: [slots?.rememberMe ? /*#__PURE__*/_jsx(slots.rememberMe, {\n                  ...slotProps?.rememberMe\n                }) : /*#__PURE__*/_jsx(FormControlLabel, {\n                  control: /*#__PURE__*/_jsx(Checkbox, {\n                    name: \"remember\",\n                    value: \"true\",\n                    color: \"primary\",\n                    sx: {\n                      padding: 0.5,\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 20\n                      }\n                    }\n                  }),\n                  label: \"Remember me\",\n                  ...slotProps?.rememberMe,\n                  slotProps: {\n                    typography: {\n                      color: 'textSecondary',\n                      fontSize: theme.typography.pxToRem(14)\n                    },\n                    ...slotProps?.rememberMe?.slotProps\n                  }\n                }), slots?.forgotPasswordLink ? /*#__PURE__*/_jsx(slots.forgotPasswordLink, {\n                  ...slotProps?.forgotPasswordLink\n                }) : null]\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsx(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                loading: loading && selectedProviderId === credentialsProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: \"Sign in\"\n              }), slots?.signUpLink ? /*#__PURE__*/_jsx(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: slots?.signUpLink ? /*#__PURE__*/_jsx(slots.signUpLink, {\n                  ...slotProps?.signUpLink\n                }) : null\n              }) : null]\n            })]\n          }) : null]\n        })]\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? SignInPage.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The list of authentication providers to display.\n   * @default []\n   */\n  providers: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  })),\n  /**\n   * Callback fired when a user signs in.\n   * @param {AuthProvider} provider The authentication provider.\n   * @param {FormData} formData The form data if the provider id is 'credentials'.\\\n   * @param {string} callbackUrl The URL to redirect to after signing in.\n   * @returns {void|Promise<AuthResponse>}\n   * @default undefined\n   */\n  signIn: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @example { emailField: { autoFocus: false } }\n   * @example { passwordField: { variant: 'outlined' } }\n   * @example { emailField: { autoFocus: false }, passwordField: { variant: 'outlined' } }\n   */\n  slotProps: PropTypes.shape({\n    emailField: PropTypes.object,\n    forgotPasswordLink: PropTypes.object,\n    passwordField: PropTypes.object,\n    rememberMe: PropTypes.object,\n    signUpLink: PropTypes.object,\n    submitButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   * @example { forgotPasswordLink: <Link href=\"/forgot-password\">Forgot password?</Link> }\n   * @example { signUpLink: <Link href=\"/sign-up\">Sign up</Link> }\n   */\n  slots: PropTypes.shape({\n    emailField: PropTypes.elementType,\n    forgotPasswordLink: PropTypes.elementType,\n    passwordField: PropTypes.elementType,\n    rememberMe: PropTypes.elementType,\n    signUpLink: PropTypes.elementType,\n    submitButton: PropTypes.elementType,\n    subtitle: PropTypes.elementType,\n    title: PropTypes.elementType\n  }),\n  /**\n   * The prop used to customize the styles on the `SignInPage` container\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { SignInPage };","map":{"version":3,"names":["_Typography","React","PropTypes","Alert","Box","Stack","Checkbox","Container","Divider","FormControlLabel","TextField","Typography","LoadingButton","GitHubIcon","PasswordIcon","FingerprintIcon","AppleIcon","alpha","useTheme","GoogleIcon","FacebookIcon","TwitterIcon","InstagramIcon","TikTokIcon","LinkedInIcon","SlackIcon","SpotifyIcon","TwitchIcon","DiscordIcon","LineIcon","Auth0Icon","MicrosoftEntraIdIcon","CognitoIcon","GitLabIcon","KeycloakIcon","OktaIcon","FusionAuthIcon","BrandingContext","RouterContext","jsx","_jsx","jsxs","_jsxs","mergeSlotSx","defaultSx","slotProps","Array","isArray","sx","getCommonTextFieldProps","theme","baseProps","arguments","length","undefined","required","fullWidth","htmlInput","paddingTop","spacing","paddingBottom","inputLabel","lineHeight","typography","pxToRem","fontSize","IconProviderMap","Map","SignInPage","props","providers","signIn","slots","branding","useContext","router","passkeyProvider","find","provider","id","credentialsProvider","emailProvider","loading","selectedProviderId","error","success","setFormStatus","useState","callbackUrl","searchParams","get","singleProvider","useMemo","isOauthProvider","useCallback","minHeight","display","flexDirection","justifyContent","alignItems","children","component","maxWidth","bgcolor","borderRadius","p","border","borderColor","palette","grey","boxShadow","shadows","logo","title","variant","color","my","textAlign","fontWeight","subtitle","gutterBottom","mt","width","severity","Object","values","filter","map","onSubmit","event","preventDefault","oauthResponse","prev","type","size","disableElevation","name","value","startIcon","textTransform","Fragment","mx","mb","formData","FormData","currentTarget","passkeyResponse","emailField","label","placeholder","autoComplete","autoFocus","submitButton","emailResponse","credentialsResponse","direction","passwordField","rememberMe","control","padding","forgotPasswordLink","signUpLink","process","env","NODE_ENV","propTypes","arrayOf","shape","string","isRequired","func","object","elementType","oneOfType","bool"],"sources":["C:/Users/luchi/Documents/DevProject/mon-appli-Recette/node_modules/@toolpad/core/SignInPage/SignInPage.js"],"sourcesContent":["'use client';\n\nvar _Typography;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Checkbox from '@mui/material/Checkbox';\nimport Container from '@mui/material/Container';\nimport Divider from '@mui/material/Divider';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport FingerprintIcon from '@mui/icons-material/Fingerprint';\nimport AppleIcon from '@mui/icons-material/Apple';\nimport { alpha, useTheme } from '@mui/material/styles';\nimport GoogleIcon from \"./icons/Google.js\";\nimport FacebookIcon from \"./icons/Facebook.js\";\nimport TwitterIcon from \"./icons/Twitter.js\";\nimport InstagramIcon from \"./icons/Instagram.js\";\nimport TikTokIcon from \"./icons/TikTok.js\";\nimport LinkedInIcon from \"./icons/LinkedIn.js\";\nimport SlackIcon from \"./icons/Slack.js\";\nimport SpotifyIcon from \"./icons/Spotify.js\";\nimport TwitchIcon from \"./icons/Twitch.js\";\nimport DiscordIcon from \"./icons/Discord.js\";\nimport LineIcon from \"./icons/Line.js\";\nimport Auth0Icon from \"./icons/Auth0.js\";\nimport MicrosoftEntraIdIcon from \"./icons/MicrosoftEntra.js\";\nimport CognitoIcon from \"./icons/Cognito.js\";\nimport GitLabIcon from \"./icons/GitLab.js\";\nimport KeycloakIcon from \"./icons/Keycloak.js\";\nimport OktaIcon from \"./icons/Okta.js\";\nimport FusionAuthIcon from \"./icons/FusionAuth.js\";\nimport { BrandingContext, RouterContext } from \"../shared/context.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst mergeSlotSx = (defaultSx, slotProps) => {\n  if (Array.isArray(slotProps?.sx)) {\n    return [defaultSx, ...slotProps.sx];\n  }\n  if (slotProps?.sx) {\n    return [defaultSx, slotProps?.sx];\n  }\n  return [defaultSx];\n};\nconst getCommonTextFieldProps = (theme, baseProps = {}) => ({\n  required: true,\n  fullWidth: true,\n  ...baseProps,\n  slotProps: {\n    ...baseProps.slotProps,\n    htmlInput: {\n      ...baseProps.slotProps?.htmlInput,\n      sx: mergeSlotSx({\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1)\n      }, typeof baseProps.slotProps?.htmlInput === 'function' ? {} : baseProps.slotProps?.htmlInput)\n    },\n    inputLabel: {\n      ...baseProps.slotProps?.inputLabel,\n      sx: mergeSlotSx({\n        lineHeight: theme.typography.pxToRem(12),\n        fontSize: theme.typography.pxToRem(14)\n      }, typeof baseProps.slotProps?.inputLabel === 'function' ? {} : baseProps.slotProps?.inputLabel)\n    }\n  }\n});\nconst IconProviderMap = new Map([['github', /*#__PURE__*/_jsx(GitHubIcon, {}, \"github\")], ['credentials', /*#__PURE__*/_jsx(PasswordIcon, {}, \"credentials\")], ['google', /*#__PURE__*/_jsx(GoogleIcon, {}, \"google\")], ['facebook', /*#__PURE__*/_jsx(FacebookIcon, {}, \"facebook\")], ['passkey', /*#__PURE__*/_jsx(FingerprintIcon, {}, \"passkey\")], ['twitter', /*#__PURE__*/_jsx(TwitterIcon, {}, \"twitter\")], ['apple', /*#__PURE__*/_jsx(AppleIcon, {}, \"apple\")], ['instagram', /*#__PURE__*/_jsx(InstagramIcon, {}, \"instagram\")], ['tiktok', /*#__PURE__*/_jsx(TikTokIcon, {}, \"tiktok\")], ['linkedin', /*#__PURE__*/_jsx(LinkedInIcon, {}, \"linkedin\")], ['slack', /*#__PURE__*/_jsx(SlackIcon, {}, \"slack\")], ['spotify', /*#__PURE__*/_jsx(SpotifyIcon, {}, \"spotify\")], ['twitch', /*#__PURE__*/_jsx(TwitchIcon, {}, \"twitch\")], ['discord', /*#__PURE__*/_jsx(DiscordIcon, {}, \"discord\")], ['line', /*#__PURE__*/_jsx(LineIcon, {}, \"line\")], ['auth0', /*#__PURE__*/_jsx(Auth0Icon, {}, \"auth0\")], ['microsoft-entra-id', /*#__PURE__*/_jsx(MicrosoftEntraIdIcon, {}, \"microsoft-entra-id\")], ['cognito', /*#__PURE__*/_jsx(CognitoIcon, {}, \"cognito\")], ['gitlab', /*#__PURE__*/_jsx(GitLabIcon, {}, \"gitlab\")], ['keycloak', /*#__PURE__*/_jsx(KeycloakIcon, {}, \"keycloak\")], ['okta', /*#__PURE__*/_jsx(OktaIcon, {}, \"okta\")], ['fusionauth', /*#__PURE__*/_jsx(FusionAuthIcon, {}, \"fusionauth\")]]);\n/**\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n *\n * API:\n *\n * - [SignInPage API](https://mui.com/toolpad/core/api/sign-in-page)\n */\nfunction SignInPage(props) {\n  const {\n    providers,\n    signIn,\n    slots,\n    slotProps,\n    sx\n  } = props;\n  const theme = useTheme();\n  const branding = React.useContext(BrandingContext);\n  const router = React.useContext(RouterContext);\n  const passkeyProvider = providers?.find(provider => provider.id === 'passkey');\n  const credentialsProvider = providers?.find(provider => provider.id === 'credentials');\n  const emailProvider = providers?.find(provider => provider.id === 'nodemailer');\n  const [{\n    loading,\n    selectedProviderId,\n    error,\n    success\n  }, setFormStatus] = React.useState({\n    selectedProviderId: undefined,\n    loading: false,\n    error: '',\n    success: ''\n  });\n  const callbackUrl = router?.searchParams.get('callbackUrl') ?? '/';\n  const singleProvider = React.useMemo(() => providers?.length === 1, [providers]);\n  const isOauthProvider = React.useCallback(provider => provider && provider !== 'credentials' && provider !== 'nodemailer' && provider !== 'passkey', []);\n  return /*#__PURE__*/_jsx(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      ...sx\n    },\n    children: /*#__PURE__*/_jsx(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxs(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          bgcolor: 'background.paper',\n          borderRadius: 1,\n          p: 4,\n          border: '1px solid',\n          borderColor: alpha(theme.palette.grey[400], 0.4),\n          boxShadow: theme.shadows[4]\n        },\n        children: [branding?.logo, slots?.title ? /*#__PURE__*/_jsx(slots.title, {}) : /*#__PURE__*/_jsxs(Typography, {\n          variant: \"h5\",\n          color: \"textPrimary\",\n          sx: {\n            my: theme.spacing(1),\n            textAlign: 'center',\n            fontWeight: 600\n          },\n          children: [\"Sign in \", branding?.title ? `to ${branding.title}` : null]\n        }), slots?.subtitle ? /*#__PURE__*/_jsx(slots.subtitle, {}) : _Typography || (_Typography = /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          textAlign: \"center\",\n          children: \"Welcome, please sign in to continue\"\n        })), /*#__PURE__*/_jsxs(Box, {\n          sx: {\n            mt: theme.spacing(1),\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxs(Stack, {\n            spacing: 1,\n            children: [error && isOauthProvider(selectedProviderId) ? /*#__PURE__*/_jsx(Alert, {\n              severity: \"error\",\n              children: error\n            }) : null, Object.values(providers ?? {}).filter(provider => isOauthProvider(provider.id)).map(provider => {\n              return /*#__PURE__*/_jsx(\"form\", {\n                onSubmit: async event => {\n                  event.preventDefault();\n                  setFormStatus({\n                    error: '',\n                    selectedProviderId: provider.id,\n                    loading: true\n                  });\n                  const oauthResponse = await signIn?.(provider, undefined, callbackUrl);\n                  setFormStatus(prev => ({\n                    ...prev,\n                    loading: oauthResponse?.error ? false : prev.loading,\n                    error: oauthResponse?.error\n                  }));\n                },\n                children: /*#__PURE__*/_jsx(LoadingButton, {\n                  variant: \"outlined\",\n                  type: \"submit\",\n                  fullWidth: true,\n                  size: \"large\",\n                  disableElevation: true,\n                  name: \"provider\",\n                  color: \"inherit\",\n                  loading: loading && selectedProviderId === provider.id,\n                  value: provider.id,\n                  startIcon: IconProviderMap.get(provider.id),\n                  sx: {\n                    textTransform: 'capitalize'\n                  },\n                  children: /*#__PURE__*/_jsxs(\"span\", {\n                    children: [\"Sign in with \", provider.name]\n                  })\n                }, provider.id)\n              }, provider.id);\n            })]\n          }), passkeyProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'passkey' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: passkeyProvider.id,\n                  loading: true\n                });\n                event.preventDefault();\n                const formData = new FormData(event.currentTarget);\n                const passkeyResponse = await signIn?.(passkeyProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: passkeyResponse?.error\n                }));\n              },\n              children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                ...slotProps?.emailField\n              }) : /*#__PURE__*/_jsx(TextField, {\n                ...getCommonTextFieldProps(theme, {\n                  label: 'Email',\n                  placeholder: 'your@email.com',\n                  id: 'email-passkey',\n                  name: 'email',\n                  type: 'email',\n                  autoComplete: 'email-webauthn',\n                  autoFocus: singleProvider,\n                  ...slotProps?.emailField\n                })\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsxs(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"outlined\",\n                disableElevation: true,\n                startIcon: IconProviderMap.get(passkeyProvider.id),\n                color: \"inherit\",\n                loading: loading && selectedProviderId === passkeyProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: [\"Sign in with \", passkeyProvider.name || 'Passkey']\n              })]\n            })]\n          }) : null, emailProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'nodemailer' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, success && selectedProviderId === 'nodemailer' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"success\",\n              children: success\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                event.preventDefault();\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: emailProvider.id,\n                  loading: true\n                });\n                const formData = new FormData(event.currentTarget);\n                const emailResponse = await signIn?.(emailProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: emailResponse?.error,\n                  success: emailResponse?.success\n                }));\n              },\n              children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                ...slotProps?.emailField\n              }) : /*#__PURE__*/_jsx(TextField, {\n                ...getCommonTextFieldProps(theme, {\n                  label: 'Email',\n                  placeholder: 'your@email.com',\n                  name: 'email',\n                  id: 'email-nodemailer',\n                  type: 'email',\n                  autoComplete: 'email-nodemailer',\n                  autoFocus: singleProvider,\n                  ...slotProps?.emailField\n                })\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsx(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"outlined\",\n                disableElevation: true,\n                id: \"submit-nodemailer\",\n                color: \"inherit\",\n                loading: loading && selectedProviderId === emailProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: \"Sign in with Email\"\n              })]\n            })]\n          }) : null, credentialsProvider ? /*#__PURE__*/_jsxs(React.Fragment, {\n            children: [singleProvider ? null : /*#__PURE__*/_jsx(Divider, {\n              sx: {\n                mt: 2,\n                mx: 0,\n                mb: 1\n              },\n              children: \"or\"\n            }), error && selectedProviderId === 'credentials' ? /*#__PURE__*/_jsx(Alert, {\n              sx: {\n                my: 2\n              },\n              severity: \"error\",\n              children: error\n            }) : null, /*#__PURE__*/_jsxs(Box, {\n              component: \"form\",\n              onSubmit: async event => {\n                setFormStatus({\n                  error: '',\n                  selectedProviderId: credentialsProvider.id,\n                  loading: true\n                });\n                event.preventDefault();\n                const formData = new FormData(event.currentTarget);\n                const credentialsResponse = await signIn?.(credentialsProvider, formData, callbackUrl);\n                setFormStatus(prev => ({\n                  ...prev,\n                  loading: false,\n                  error: credentialsResponse?.error\n                }));\n              },\n              children: [/*#__PURE__*/_jsxs(Stack, {\n                direction: \"column\",\n                spacing: 2,\n                sx: {\n                  mb: 2\n                },\n                children: [slots?.emailField ? /*#__PURE__*/_jsx(slots.emailField, {\n                  ...slotProps?.emailField\n                }) : /*#__PURE__*/_jsx(TextField, {\n                  ...getCommonTextFieldProps(theme, {\n                    label: 'Email',\n                    placeholder: 'your@email.com',\n                    id: 'email',\n                    name: 'email',\n                    type: 'email',\n                    autoComplete: 'email',\n                    autoFocus: singleProvider,\n                    ...slotProps?.emailField\n                  })\n                }), slots?.passwordField ? /*#__PURE__*/_jsx(slots.passwordField, {\n                  ...slotProps?.passwordField\n                }) : /*#__PURE__*/_jsx(TextField, {\n                  ...getCommonTextFieldProps(theme, {\n                    name: 'password',\n                    type: 'password',\n                    label: 'Password',\n                    id: 'password',\n                    placeholder: '*****',\n                    autoComplete: 'current-password',\n                    ...slotProps?.passwordField\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(Stack, {\n                direction: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                spacing: 1,\n                sx: {\n                  justifyContent: 'space-between'\n                },\n                children: [slots?.rememberMe ? /*#__PURE__*/_jsx(slots.rememberMe, {\n                  ...slotProps?.rememberMe\n                }) : /*#__PURE__*/_jsx(FormControlLabel, {\n                  control: /*#__PURE__*/_jsx(Checkbox, {\n                    name: \"remember\",\n                    value: \"true\",\n                    color: \"primary\",\n                    sx: {\n                      padding: 0.5,\n                      '& .MuiSvgIcon-root': {\n                        fontSize: 20\n                      }\n                    }\n                  }),\n                  label: \"Remember me\",\n                  ...slotProps?.rememberMe,\n                  slotProps: {\n                    typography: {\n                      color: 'textSecondary',\n                      fontSize: theme.typography.pxToRem(14)\n                    },\n                    ...slotProps?.rememberMe?.slotProps\n                  }\n                }), slots?.forgotPasswordLink ? /*#__PURE__*/_jsx(slots.forgotPasswordLink, {\n                  ...slotProps?.forgotPasswordLink\n                }) : null]\n              }), slots?.submitButton ? /*#__PURE__*/_jsx(slots.submitButton, {\n                ...slotProps?.submitButton\n              }) : /*#__PURE__*/_jsx(LoadingButton, {\n                type: \"submit\",\n                fullWidth: true,\n                size: \"large\",\n                variant: \"contained\",\n                disableElevation: true,\n                color: \"primary\",\n                loading: loading && selectedProviderId === credentialsProvider.id,\n                sx: {\n                  mt: 3,\n                  mb: 2,\n                  textTransform: 'capitalize'\n                },\n                ...slotProps?.submitButton,\n                children: \"Sign in\"\n              }), slots?.signUpLink ? /*#__PURE__*/_jsx(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'center'\n                },\n                children: slots?.signUpLink ? /*#__PURE__*/_jsx(slots.signUpLink, {\n                  ...slotProps?.signUpLink\n                }) : null\n              }) : null]\n            })]\n          }) : null]\n        })]\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? SignInPage.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The list of authentication providers to display.\n   * @default []\n   */\n  providers: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  })),\n  /**\n   * Callback fired when a user signs in.\n   * @param {AuthProvider} provider The authentication provider.\n   * @param {FormData} formData The form data if the provider id is 'credentials'.\\\n   * @param {string} callbackUrl The URL to redirect to after signing in.\n   * @returns {void|Promise<AuthResponse>}\n   * @default undefined\n   */\n  signIn: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @example { emailField: { autoFocus: false } }\n   * @example { passwordField: { variant: 'outlined' } }\n   * @example { emailField: { autoFocus: false }, passwordField: { variant: 'outlined' } }\n   */\n  slotProps: PropTypes.shape({\n    emailField: PropTypes.object,\n    forgotPasswordLink: PropTypes.object,\n    passwordField: PropTypes.object,\n    rememberMe: PropTypes.object,\n    signUpLink: PropTypes.object,\n    submitButton: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   * @example { forgotPasswordLink: <Link href=\"/forgot-password\">Forgot password?</Link> }\n   * @example { signUpLink: <Link href=\"/sign-up\">Sign up</Link> }\n   */\n  slots: PropTypes.shape({\n    emailField: PropTypes.elementType,\n    forgotPasswordLink: PropTypes.elementType,\n    passwordField: PropTypes.elementType,\n    rememberMe: PropTypes.elementType,\n    signUpLink: PropTypes.elementType,\n    submitButton: PropTypes.elementType,\n    subtitle: PropTypes.elementType,\n    title: PropTypes.elementType\n  }),\n  /**\n   * The prop used to customize the styles on the `SignInPage` container\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { SignInPage };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}