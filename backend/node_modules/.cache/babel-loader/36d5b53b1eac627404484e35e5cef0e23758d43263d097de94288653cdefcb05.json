{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { TextField, Button, Box, Typography } from '@mui/material';\n// import { signInWithEmailAndPassword } from 'firebase/auth';\n// import { auth } from '../firebaseConfig';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n//     try {\n//       await signInWithEmailAndPassword(auth, email, password);\n//       navigate('/Accueil');\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ maxWidth: 400, mx: 'auto', mt: 5 }}>\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//         Connexion\n//       </Typography>\n//       <form onSubmit={handleSubmit}>\n//         <TextField\n//           label=\"Email\"\n//           type=\"email\"\n//           fullWidth\n//           margin=\"normal\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <TextField\n//           label=\"Mot de passe\"\n//           type=\"password\"\n//           fullWidth\n//           margin=\"normal\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         {error && <Typography color=\"error\">{error}</Typography>}\n//         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n//           Se connecter\n//         </Button>\n//       </form>\n//     </Box>\n//   );\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/luchi/Documents/DevProject/mon-appli-Recette/src/pages/Login.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { TextField, Button, Box, Typography } from '@mui/material';\r\n// import { signInWithEmailAndPassword } from 'firebase/auth';\r\n// import { auth } from '../firebaseConfig';\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     try {\r\n//       await signInWithEmailAndPassword(auth, email, password);\r\n//       navigate('/Accueil');\r\n//     } catch (error) {\r\n//       setError(error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ maxWidth: 400, mx: 'auto', mt: 5 }}>\r\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n//         Connexion\r\n//       </Typography>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <TextField\r\n//           label=\"Email\"\r\n//           type=\"email\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <TextField\r\n//           label=\"Mot de passe\"\r\n//           type=\"password\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         {error && <Typography color=\"error\">{error}</Typography>}\r\n//         <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n//           Se connecter\r\n//         </Button>\r\n//       </form>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Login;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}