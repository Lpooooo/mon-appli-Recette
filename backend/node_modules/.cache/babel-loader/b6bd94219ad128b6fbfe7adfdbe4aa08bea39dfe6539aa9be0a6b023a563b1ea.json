{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luchi\\\\Documents\\\\DevProject\\\\mon-appli-Recette\\\\src\\\\pages\\\\Utilisateurs.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Button, FormControl, FormControlLabel, Checkbox, InputLabel, OutlinedInput, TextField, InputAdornment, Link, Alert, IconButton } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SlotsSignIn() {\n  _s();\n  const theme = useTheme();\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(AppProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          sx: {\n            mr: 2\n          },\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: () => setDrawerOpen(true),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"inherit\",\n          component: \"div\",\n          children: \"Cr\\xE9ation de votre recette\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignInPage, {\n      signIn: (provider, formData) => alert(`Logging in with \"${provider.name}\" and credentials: ${formData.get('email')}, ${formData.get('password')}, and checkbox value: ${formData.get('tandc')}`),\n      slots: {\n        title: Title,\n        subtitle: Subtitle,\n        emailField: CustomEmailField,\n        passwordField: CustomPasswordField,\n        submitButton: CustomButton,\n        signUpLink: SignUpLink,\n        rememberMe: AgreeWithTerms\n      },\n      providers: providers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(SlotsSignIn, \"djw8IoPR/4LX6sSI0WGEItn53xY=\", false, function () {\n  return [useTheme];\n});\n_c = SlotsSignIn;\nvar _c;\n$RefreshReg$(_c, \"SlotsSignIn\");","map":{"version":3,"names":["React","Button","FormControl","FormControlLabel","Checkbox","InputLabel","OutlinedInput","TextField","InputAdornment","Link","Alert","IconButton","AccountCircle","Visibility","VisibilityOff","AppProvider","SignInPage","useTheme","jsxDEV","_jsxDEV","SlotsSignIn","_s","theme","drawerOpen","setDrawerOpen","useState","children","AppBar","position","color","Toolbar","edge","sx","mr","onClick","MenuIcon","fileName","_jsxFileName","lineNumber","columnNumber","Typography","variant","component","signIn","provider","formData","alert","name","get","slots","title","Title","subtitle","Subtitle","emailField","CustomEmailField","passwordField","CustomPasswordField","submitButton","CustomButton","signUpLink","SignUpLink","rememberMe","AgreeWithTerms","providers","_c","$RefreshReg$"],"sources":["C:/Users/luchi/Documents/DevProject/mon-appli-Recette/src/pages/Utilisateurs.jsx"],"sourcesContent":["import * as React from 'react'; import { Button, FormControl, FormControlLabel, Checkbox, InputLabel, OutlinedInput, TextField, InputAdornment, Link, Alert, IconButton, } from '@mui/material'; import AccountCircle from '@mui/icons-material/AccountCircle'; import Visibility from '@mui/icons-material/Visibility'; import VisibilityOff from '@mui/icons-material/VisibilityOff'; import { AppProvider } from '@toolpad/core/AppProvider'; import { SignInPage } from '@toolpad/core/SignInPage'; import { useTheme } from '@mui/material/styles';\r\n\r\n\r\n\r\n\r\n\r\nexport default function SlotsSignIn() {\r\n  const theme = useTheme();\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n\r\n  return (\r\n    <AppProvider theme={theme}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            sx={{ mr: 2 }}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => setDrawerOpen(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" component=\"div\">\r\n            Cr√©ation de votre recette\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SignInPage\r\n        signIn={(provider, formData) =>\r\n          alert(\r\n            `Logging in with \"${provider.name}\" and credentials: ${formData.get('email')}, ${formData.get('password')}, and checkbox value: ${formData.get('tandc')}`,\r\n          )\r\n        }\r\n        slots={{\r\n          title: Title,\r\n          subtitle: Subtitle,\r\n          emailField: CustomEmailField,\r\n          passwordField: CustomPasswordField,\r\n          submitButton: CustomButton,\r\n          signUpLink: SignUpLink,\r\n          rememberMe: AgreeWithTerms,\r\n        }}\r\n        providers={providers}\r\n      />\r\n    </AppProvider>\r\n  );\r\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAE,SAASC,MAAM,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,cAAc,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,QAAS,eAAe;AAAE,OAAOC,aAAa,MAAM,mCAAmC;AAAE,OAAOC,UAAU,MAAM,gCAAgC;AAAE,OAAOC,aAAa,MAAM,mCAAmC;AAAE,SAASC,WAAW,QAAQ,2BAA2B;AAAE,SAASC,UAAU,QAAQ,0BAA0B;AAAE,SAASC,QAAQ,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxhB,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGxB,KAAK,CAACyB,QAAQ,CAAC,KAAK,CAAC;EAEzD,oBACEN,OAAA,CAACJ,WAAW;IAACO,KAAK,EAAEA,KAAM;IAAAI,QAAA,gBACxBP,OAAA,CAACQ,MAAM;MAACC,QAAQ,EAAC,QAAQ;MAACC,KAAK,EAAC,SAAS;MAAAH,QAAA,eACvCP,OAAA,CAACW,OAAO;QAAAJ,QAAA,gBACNP,OAAA,CAACR,UAAU;UACToB,IAAI,EAAC,OAAO;UACZC,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UACdJ,KAAK,EAAC,SAAS;UACf,cAAW,MAAM;UACjBK,OAAO,EAAEA,CAAA,KAAMV,aAAa,CAAC,IAAI,CAAE;UAAAE,QAAA,eAEnCP,OAAA,CAACgB,QAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACbpB,OAAA,CAACqB,UAAU;UAACC,OAAO,EAAC,IAAI;UAACZ,KAAK,EAAC,SAAS;UAACa,SAAS,EAAC,KAAK;UAAAhB,QAAA,EAAC;QAEzD;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACTpB,OAAA,CAACH,UAAU;MACT2B,MAAM,EAAEA,CAACC,QAAQ,EAAEC,QAAQ,KACzBC,KAAK,CACH,oBAAoBF,QAAQ,CAACG,IAAI,sBAAsBF,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC,KAAKH,QAAQ,CAACG,GAAG,CAAC,UAAU,CAAC,yBAAyBH,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC,EACzJ,CACD;MACDC,KAAK,EAAE;QACLC,KAAK,EAAEC,KAAK;QACZC,QAAQ,EAAEC,QAAQ;QAClBC,UAAU,EAAEC,gBAAgB;QAC5BC,aAAa,EAAEC,mBAAmB;QAClCC,YAAY,EAAEC,YAAY;QAC1BC,UAAU,EAAEC,UAAU;QACtBC,UAAU,EAAEC;MACd,CAAE;MACFC,SAAS,EAAEA;IAAU;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAElB;AAAClB,EAAA,CAzCuBD,WAAW;EAAA,QACnBH,QAAQ;AAAA;AAAAgD,EAAA,GADA7C,WAAW;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}