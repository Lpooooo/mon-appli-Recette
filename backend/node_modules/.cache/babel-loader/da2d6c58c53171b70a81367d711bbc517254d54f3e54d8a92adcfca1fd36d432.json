{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luchi\\\\Documents\\\\DevProject\\\\mon-appli-Recette\\\\src\\\\pages\\\\CreerUtilisateur.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { AppProvider } from '@toolpad/core/AppProvider';\nimport { SignInPage } from '@toolpad/core/SignInPage';\nimport { useTheme } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providers = [{\n  id: 'credentials',\n  name: 'Email and password'\n}];\nconst signIn = async (provider, formData) => {\n  const promise = new Promise(resolve => {\n    setTimeout(() => {\n      const email = formData === null || formData === void 0 ? void 0 : formData.get('email');\n      const password = formData === null || formData === void 0 ? void 0 : formData.get('password');\n      alert(`Signing in with \"${provider.name}\" and credentials: ${email}, ${password}`);\n      // preview-start\n      resolve({\n        type: 'CredentialsSignin',\n        error: 'Invalid credentials.'\n      });\n      // preview-end\n    }, 300);\n  });\n  return promise;\n};\nexport default function NotificationsSignInPageError() {\n  _s();\n  const theme = useTheme();\n  return (\n    /*#__PURE__*/\n    // preview-start\n    _jsxDEV(AppProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(SignInPage, {\n        signIn: signIn,\n        providers: providers,\n        slotProps: {\n          emailField: {\n            autoFocus: false\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n    // preview-end\n  );\n}\n_s(NotificationsSignInPageError, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n_c = NotificationsSignInPageError;\nvar _c;\n$RefreshReg$(_c, \"NotificationsSignInPageError\");","map":{"version":3,"names":["React","AppProvider","SignInPage","useTheme","useNavigate","jsxDEV","_jsxDEV","providers","id","name","signIn","provider","formData","promise","Promise","resolve","setTimeout","email","get","password","alert","type","error","NotificationsSignInPageError","_s","theme","children","slotProps","emailField","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/luchi/Documents/DevProject/mon-appli-Recette/src/pages/CreerUtilisateur.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport { AppProvider } from '@toolpad/core/AppProvider';\r\nimport { SignInPage } from '@toolpad/core/SignInPage';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst providers = [{ id: 'credentials', name: 'Email and password' }];\r\n\r\nconst signIn = async (provider, formData) => {\r\n  const promise = new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const email = formData?.get('email');\r\n      const password = formData?.get('password');\r\n      alert(\r\n        `Signing in with \"${provider.name}\" and credentials: ${email}, ${password}`,\r\n      );\r\n      // preview-start\r\n      resolve({\r\n        type: 'CredentialsSignin',\r\n        error: 'Invalid credentials.',\r\n      });\r\n      // preview-end\r\n    }, 300);\r\n  });\r\n  return promise;\r\n};\r\n\r\nexport default function NotificationsSignInPageError() {\r\n  const theme = useTheme();\r\n  return (\r\n    // preview-start\r\n    <AppProvider theme={theme}>\r\n      <SignInPage\r\n        signIn={signIn}\r\n        providers={providers}\r\n        slotProps={{ emailField: { autoFocus: false } }}\r\n      />\r\n    </AppProvider>\r\n    // preview-end\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAG,CAAC;EAAEC,EAAE,EAAE,aAAa;EAAEC,IAAI,EAAE;AAAqB,CAAC,CAAC;AAErE,MAAMC,MAAM,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC3C,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;IACvCC,UAAU,CAAC,MAAM;MACf,MAAMC,KAAK,GAAGL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,GAAG,CAAC,OAAO,CAAC;MACpC,MAAMC,QAAQ,GAAGP,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,GAAG,CAAC,UAAU,CAAC;MAC1CE,KAAK,CACH,oBAAoBT,QAAQ,CAACF,IAAI,sBAAsBQ,KAAK,KAAKE,QAAQ,EAC3E,CAAC;MACD;MACAJ,OAAO,CAAC;QACNM,IAAI,EAAE,mBAAmB;QACzBC,KAAK,EAAE;MACT,CAAC,CAAC;MACF;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;EACF,OAAOT,OAAO;AAChB,CAAC;AAED,eAAe,SAASU,4BAA4BA,CAAA,EAAG;EAAAC,EAAA;EACrD,MAAMC,KAAK,GAAGtB,QAAQ,CAAC,CAAC;EACxB;IAAA;IACE;IACAG,OAAA,CAACL,WAAW;MAACwB,KAAK,EAAEA,KAAM;MAAAC,QAAA,eACxBpB,OAAA,CAACJ,UAAU;QACTQ,MAAM,EAAEA,MAAO;QACfH,SAAS,EAAEA,SAAU;QACrBoB,SAAS,EAAE;UAAEC,UAAU,EAAE;YAAEC,SAAS,EAAE;UAAM;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;IACb;EAAA;AAEJ;AAACT,EAAA,CAbuBD,4BAA4B;EAAA,QACpCpB,QAAQ;AAAA;AAAA+B,EAAA,GADAX,4BAA4B;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}